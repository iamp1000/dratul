"""Initial schema creation

Revision ID: ed9b5af6e16f
Revises: 
Create Date: 2025-10-08 19:44:29.798288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ed9b5af6e16f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_locations_active', 'locations', ['is_active'], unique=False)
    op.create_index('idx_locations_timezone', 'locations', ['timezone'], unique=False)
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('system_configuration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.JSON(), nullable=True),
    sa.Column('value_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_system_configuration_id'), 'system_configuration', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'staff', 'doctor', 'nurse', 'receptionist', 'manager', name='user_role'), nullable=False),
    sa.Column('mfa_secret', sa.String(length=32), nullable=True),
    sa.Column('mfa_backup_codes', sa.JSON(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_last_changed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('must_change_password', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('current_session_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_role_active', 'users', ['role', 'is_active'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('user_role', sa.String(length=20), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'MFA_SETUP', 'MFA_VERIFY', 'PASSWORD_RESET', 'ACCESS_DENIED', 'EXPORT', 'PRINT', 'BULK_ACTION', name='audit_action'), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('request_id', sa.String(length=100), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('business_justification', sa.Text(), nullable=True),
    sa.Column('access_category', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_action_date', 'audit_logs', ['action', 'timestamp'], unique=False)
    op.create_index('idx_audit_ip_date', 'audit_logs', ['ip_address', 'timestamp'], unique=False)
    op.create_index('idx_audit_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_user_date', 'audit_logs', ['user_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_table('location_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('break_start', sa.Time(), nullable=True),
    sa.Column('break_end', sa.Time(), nullable=True),
    sa.Column('max_appointments', sa.Integer(), nullable=True),
    sa.Column('appointment_duration', sa.Integer(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=True),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_schedule_available', 'location_schedules', ['is_available'], unique=False)
    op.create_index('idx_schedule_location_day', 'location_schedules', ['location_id', 'day_of_week'], unique=False)
    op.create_index(op.f('ix_location_schedules_id'), 'location_schedules', ['id'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('phone_number_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('email_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('address_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('phone_hash', sa.String(length=64), nullable=True),
    sa.Column('email_hash', sa.String(length=64), nullable=True),
    sa.Column('name_hash', sa.String(length=64), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('blood_type', sa.String(length=5), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('emergency_contact_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('emergency_contact_hash', sa.String(length=64), nullable=True),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('insurance_number_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('insurance_number_hash', sa.String(length=64), nullable=True),
    sa.Column('preferred_communication', sa.Enum('whatsapp', 'email', 'sms', 'phone', name='communication_type'), nullable=True),
    sa.Column('communication_preferences', sa.JSON(), nullable=True),
    sa.Column('whatsapp_number', sa.String(length=20), nullable=True),
    sa.Column('whatsapp_opt_in', sa.Boolean(), nullable=True),
    sa.Column('whatsapp_opt_in_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hipaa_authorization', sa.Boolean(), nullable=True),
    sa.Column('hipaa_authorization_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consent_to_treatment', sa.Boolean(), nullable=True),
    sa.Column('consent_to_treatment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('vip_status', sa.Boolean(), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_visit_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_patients_created', 'patients', ['created_at'], unique=False)
    op.create_index('idx_patients_dob', 'patients', ['date_of_birth'], unique=False)
    op.create_index('idx_patients_email_hash', 'patients', ['email_hash'], unique=False)
    op.create_index('idx_patients_phone_hash', 'patients', ['phone_hash'], unique=False)
    op.create_index(op.f('ix_patients_email_hash'), 'patients', ['email_hash'], unique=False)
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_index(op.f('ix_patients_name_hash'), 'patients', ['name_hash'], unique=False)
    op.create_index(op.f('ix_patients_phone_hash'), 'patients', ['phone_hash'], unique=False)
    op.create_table('unavailable_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('reason_type', sa.String(length=50), nullable=True),
    sa.Column('affects_all_staff', sa.Boolean(), nullable=True),
    sa.Column('affected_staff_ids', sa.JSON(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_pattern', sa.JSON(), nullable=True),
    sa.Column('google_calendar_event_id', sa.String(length=255), nullable=True),
    sa.Column('patients_notified', sa.Boolean(), nullable=True),
    sa.Column('notification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_unavailable_date_range', 'unavailable_periods', ['start_datetime', 'end_datetime'], unique=False)
    op.create_index('idx_unavailable_location_date', 'unavailable_periods', ['location_id', 'start_datetime'], unique=False)
    op.create_index(op.f('ix_unavailable_periods_id'), 'unavailable_periods', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('appointment_type', sa.String(length=50), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('chief_complaint', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('scheduled', 'confirmed', 'checked_in', 'in_progress', 'completed', 'cancelled', 'no_show', 'rescheduled', name='appointment_status'), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('checked_in_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('google_calendar_event_id', sa.String(length=255), nullable=True),
    sa.Column('zoom_meeting_id', sa.String(length=255), nullable=True),
    sa.Column('billing_status', sa.String(length=50), nullable=True),
    sa.Column('insurance_authorization', sa.String(length=100), nullable=True),
    sa.Column('copay_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('copay_collected', sa.Boolean(), nullable=True),
    sa.Column('reminder_sent_24h', sa.Boolean(), nullable=True),
    sa.Column('reminder_sent_2h', sa.Boolean(), nullable=True),
    sa.Column('no_show_fee_applied', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_appointments_date_range', 'appointments', ['start_time', 'end_time'], unique=False)
    op.create_index('idx_appointments_location_date', 'appointments', ['location_id', 'start_time'], unique=False)
    op.create_index('idx_appointments_patient_date', 'appointments', ['patient_id', 'start_time'], unique=False)
    op.create_index('idx_appointments_status_date', 'appointments', ['status', 'start_time'], unique=False)
    op.create_index('idx_appointments_user_date', 'appointments', ['user_id', 'start_time'], unique=False)
    op.create_index(op.f('ix_appointments_end_time'), 'appointments', ['end_time'], unique=False)
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_index(op.f('ix_appointments_start_time'), 'appointments', ['start_time'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_table('communication_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('communication_type', sa.Enum('whatsapp', 'email', 'sms', 'phone', name='communication_type'), nullable=False),
    sa.Column('direction', sa.String(length=20), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('from_address', sa.String(length=255), nullable=True),
    sa.Column('to_address', sa.String(length=255), nullable=True),
    sa.Column('channel_message_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('template_name', sa.String(length=100), nullable=True),
    sa.Column('is_automated', sa.Boolean(), nullable=True),
    sa.Column('campaign_id', sa.String(length=100), nullable=True),
    sa.Column('business_justification', sa.Text(), nullable=True),
    sa.Column('consent_obtained', sa.Boolean(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_communications_direction', 'communication_logs', ['direction', 'sent_at'], unique=False)
    op.create_index('idx_communications_patient', 'communication_logs', ['patient_id'], unique=False)
    op.create_index('idx_communications_status', 'communication_logs', ['status', 'sent_at'], unique=False)
    op.create_index('idx_communications_type_date', 'communication_logs', ['communication_type', 'sent_at'], unique=False)
    op.create_index(op.f('ix_communication_logs_id'), 'communication_logs', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_type', sa.Enum('medical_record', 'prescription', 'lab_result', 'insurance_card', 'consent_form', 'identification', 'other', name='document_type'), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_path_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=False),
    sa.Column('encryption_key_id', sa.String(length=64), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('access_level', sa.String(length=20), nullable=True),
    sa.Column('retention_date', sa.Date(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_patient', 'documents', ['patient_id'], unique=False)
    op.create_index('idx_documents_type_date', 'documents', ['document_type', 'uploaded_at'], unique=False)
    op.create_index('idx_documents_uploader', 'documents', ['uploaded_by'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('notification_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('channel', sa.Enum('whatsapp', 'email', 'sms', 'phone', name='communicationtype'), nullable=False),
    sa.Column('recipient', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('template_id', sa.String(length=100), nullable=True),
    sa.Column('template_data', sa.JSON(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('max_attempts', sa.Integer(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_retry_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notifications_patient', 'notification_queue', ['patient_id'], unique=False)
    op.create_index('idx_notifications_status_priority', 'notification_queue', ['status', 'priority', 'scheduled_for'], unique=False)
    op.create_index(op.f('ix_notification_queue_id'), 'notification_queue', ['id'], unique=False)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('prescribed_by', sa.Integer(), nullable=False),
    sa.Column('medication_name', sa.String(length=255), nullable=False),
    sa.Column('generic_name', sa.String(length=255), nullable=True),
    sa.Column('dosage', sa.String(length=100), nullable=False),
    sa.Column('dosage_form', sa.String(length=50), nullable=True),
    sa.Column('strength', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=False),
    sa.Column('duration', sa.String(length=100), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('food_instructions', sa.Text(), nullable=True),
    sa.Column('quantity', sa.String(length=50), nullable=True),
    sa.Column('refills_allowed', sa.Integer(), nullable=True),
    sa.Column('refills_used', sa.Integer(), nullable=True),
    sa.Column('days_supply', sa.Integer(), nullable=True),
    sa.Column('indication', sa.Text(), nullable=True),
    sa.Column('contraindications', sa.Text(), nullable=True),
    sa.Column('side_effects', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('discontinuation_reason', sa.Text(), nullable=True),
    sa.Column('ndc_number', sa.String(length=20), nullable=True),
    sa.Column('dea_schedule', sa.String(length=5), nullable=True),
    sa.Column('prior_authorization_required', sa.Boolean(), nullable=True),
    sa.Column('prescribed_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('last_filled_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['prescribed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_prescriptions_active', 'prescriptions', ['is_active', 'prescribed_date'], unique=False)
    op.create_index('idx_prescriptions_medication', 'prescriptions', ['medication_name'], unique=False)
    op.create_index('idx_prescriptions_patient', 'prescriptions', ['patient_id'], unique=False)
    op.create_index('idx_prescriptions_prescriber', 'prescriptions', ['prescribed_by'], unique=False)
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_table('whatsapp_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('current_flow', sa.String(length=50), nullable=True),
    sa.Column('flow_step', sa.String(length=50), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ai_enabled', sa.Boolean(), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('successful_bookings', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_index('idx_whatsapp_active', 'whatsapp_sessions', ['is_active', 'last_activity'], unique=False)
    op.create_index('idx_whatsapp_patient', 'whatsapp_sessions', ['patient_id'], unique=False)
    op.create_index('idx_whatsapp_phone', 'whatsapp_sessions', ['phone_number'], unique=False)
    op.create_index(op.f('ix_whatsapp_sessions_id'), 'whatsapp_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_whatsapp_sessions_phone_number'), 'whatsapp_sessions', ['phone_number'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_whatsapp_sessions_phone_number'), table_name='whatsapp_sessions')
    op.drop_index(op.f('ix_whatsapp_sessions_id'), table_name='whatsapp_sessions')
    op.drop_index('idx_whatsapp_phone', table_name='whatsapp_sessions')
    op.drop_index('idx_whatsapp_patient', table_name='whatsapp_sessions')
    op.drop_index('idx_whatsapp_active', table_name='whatsapp_sessions')
    op.drop_table('whatsapp_sessions')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_index('idx_prescriptions_prescriber', table_name='prescriptions')
    op.drop_index('idx_prescriptions_patient', table_name='prescriptions')
    op.drop_index('idx_prescriptions_medication', table_name='prescriptions')
    op.drop_index('idx_prescriptions_active', table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_notification_queue_id'), table_name='notification_queue')
    op.drop_index('idx_notifications_status_priority', table_name='notification_queue')
    op.drop_index('idx_notifications_patient', table_name='notification_queue')
    op.drop_table('notification_queue')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index('idx_documents_uploader', table_name='documents')
    op.drop_index('idx_documents_type_date', table_name='documents')
    op.drop_index('idx_documents_patient', table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_communication_logs_id'), table_name='communication_logs')
    op.drop_index('idx_communications_type_date', table_name='communication_logs')
    op.drop_index('idx_communications_status', table_name='communication_logs')
    op.drop_index('idx_communications_patient', table_name='communication_logs')
    op.drop_index('idx_communications_direction', table_name='communication_logs')
    op.drop_table('communication_logs')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_start_time'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_end_time'), table_name='appointments')
    op.drop_index('idx_appointments_user_date', table_name='appointments')
    op.drop_index('idx_appointments_status_date', table_name='appointments')
    op.drop_index('idx_appointments_patient_date', table_name='appointments')
    op.drop_index('idx_appointments_location_date', table_name='appointments')
    op.drop_index('idx_appointments_date_range', table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_unavailable_periods_id'), table_name='unavailable_periods')
    op.drop_index('idx_unavailable_location_date', table_name='unavailable_periods')
    op.drop_index('idx_unavailable_date_range', table_name='unavailable_periods')
    op.drop_table('unavailable_periods')
    op.drop_index(op.f('ix_patients_phone_hash'), table_name='patients')
    op.drop_index(op.f('ix_patients_name_hash'), table_name='patients')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_index(op.f('ix_patients_email_hash'), table_name='patients')
    op.drop_index('idx_patients_phone_hash', table_name='patients')
    op.drop_index('idx_patients_email_hash', table_name='patients')
    op.drop_index('idx_patients_dob', table_name='patients')
    op.drop_index('idx_patients_created', table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_location_schedules_id'), table_name='location_schedules')
    op.drop_index('idx_schedule_location_day', table_name='location_schedules')
    op.drop_index('idx_schedule_available', table_name='location_schedules')
    op.drop_table('location_schedules')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index('idx_audit_user_date', table_name='audit_logs')
    op.drop_index('idx_audit_resource', table_name='audit_logs')
    op.drop_index('idx_audit_ip_date', table_name='audit_logs')
    op.drop_index('idx_audit_action_date', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_role_active', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_configuration_id'), table_name='system_configuration')
    op.drop_table('system_configuration')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_index('idx_locations_timezone', table_name='locations')
    op.drop_index('idx_locations_active', table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
