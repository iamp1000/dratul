"""Add unique constraint to location_schedules

Revision ID: 0e4d267732b1
Revises: 4
Create Date: 2025-10-23 16:43:57.055861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0e4d267732b1'
down_revision: Union[str, Sequence[str], None] = '4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_doctor_schedules_id'), table_name='doctor_schedules')
    op.drop_index(op.f('ix_doctor_schedules_user_id'), table_name='doctor_schedules')
    op.drop_table('doctor_schedules')
    op.drop_index(op.f('ix_unavailability_periods_google_calendar_event_id'), table_name='unavailability_periods')
    op.drop_index(op.f('ix_unavailability_periods_id'), table_name='unavailability_periods')
    op.drop_index(op.f('ix_unavailability_periods_user_id'), table_name='unavailability_periods')
    op.drop_table('unavailability_periods')
    op.alter_column('audit_logs', 'resource_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.create_index(op.f('ix_audit_logs_category'), 'audit_logs', ['category'], unique=False)
    op.create_index(op.f('ix_audit_logs_severity'), 'audit_logs', ['severity'], unique=False)
    op.create_unique_constraint('uq_location_day', 'location_schedules', ['location_id', 'day_of_week'])
    op.create_index(op.f('ix_patients_name_hash'), 'patients', ['name_hash'], unique=False)
    op.alter_column('remarks', 'patient_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('remarks', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('idx_remarks_patient_author'), table_name='remarks')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_remarks_patient_author'), 'remarks', ['patient_id', 'author_id'], unique=False)
    op.alter_column('remarks', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('remarks', 'patient_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_patients_name_hash'), table_name='patients')
    op.drop_constraint('uq_location_day', 'location_schedules', type_='unique')
    op.drop_index(op.f('ix_audit_logs_severity'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_category'), table_name='audit_logs')
    op.alter_column('audit_logs', 'resource_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_table('unavailability_periods',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('end_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('google_calendar_event_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('unavailability_periods_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('unavailability_periods_pkey'))
    )
    op.create_index(op.f('ix_unavailability_periods_user_id'), 'unavailability_periods', ['user_id'], unique=False)
    op.create_index(op.f('ix_unavailability_periods_id'), 'unavailability_periods', ['id'], unique=False)
    op.create_index(op.f('ix_unavailability_periods_google_calendar_event_id'), 'unavailability_periods', ['google_calendar_event_id'], unique=False)
    op.create_table('doctor_schedules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time_hospital', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('end_time_hospital', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('start_time_home', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('end_time_home', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('start_time_online', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('end_time_online', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('is_available', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('doctor_schedules_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('doctor_schedules_pkey'))
    )
    op.create_index(op.f('ix_doctor_schedules_user_id'), 'doctor_schedules', ['user_id'], unique=False)
    op.create_index(op.f('ix_doctor_schedules_id'), 'doctor_schedules', ['id'], unique=False)
    # ### end Alembic commands ###
